#!/bin/sh
# Generates QR code with SIMET label information
# Copyright (c) 2023 NIC.br
#
# Distributed under the BSD 3-clause license or GPLv3+

# Parameters:
# --png <path>  : Outputs PNG version to <path>
# --text <path> : Outputs text version to <path>
#
# --url         : QRCode is pairing URL
# --issue       : QRCode is for /etc/issue (implies text output to stdout)
#
# --utf8        : Force UTF8 for --text
# --ascii       : Force ASCII for --text
# --ansi        : Force ANSI for --text
#
# If no --text/--png parameters are given, outputs text version to stdout.
# if '-' is used as the filename, outputs data to stdout.
#
# --issue overrides defaults for glue that handles /etc/issue and is usually
# used alone.  Always use it before all other options so that behavior can
# be predicable.

set -e

. @SIMETLIBDIR@/simet_lib.sh || exit 3

DOTXT=0
DOPNG=0
DOURL=0
T_TM=UTF8

SIMET2_VLABEL=$(@BINDIR@/simet_read_vlabel.sh) || SIMET2_VLABEL=
[ -z "$SIMET2_VLABEL" ] && {
	printf "%s: SIMET vlabel unavailable, generate one first\n" >&2 "$0"
	exit 3
}

command -v qrencode >/dev/null 2>&1 || {
	printf "%s: qrencode unavailable, install it first\n" >&2 "$0"
	exit 1
}

while [ $# -gt 0 ] ; do
	case "$1" in
	--issue)
		DOPNG=0
		DOURL=0
		DOTXT=1
		TXTFILE="-"
		T_TM=ANSI
		;;
	--png)
		PNGFILE="$2"
		DOPNG=1
		shift
		;;
	--text)
		TXTFILE="$2"
		DOTXT=1
		shift
		;;
	--url)
		DOURL=1
		;;
	--utf8)
		T_TM=UTF8
		;;
	--ascii)
		T_TM=ASCIIi
		;;
	--ansi)
		T_TM=ANSI
		;;
	*)
		printf "unknown command line parameter: %s\n" "$1" >&2
		exit 2
	esac
	shift
done

[ "$DOTXT" -eq 0 ] && [ "$DOPNG" -eq 0 ] && {
	DOTXT=1
	TXTFILE='-'
}

LTEXT=
if [ "$DOURL" -eq 0 ] ; then
	LTEXT=$(printf 'SIMET:V1 VL:%s' "$SIMET2_VLABEL")
	[ -n "$SIMET_MAC_LABEL" ] && {
		# QR codes have better compression for A-Z than a-z
		#shellcheck disable=SC2018,SC2019
		MAC=$(printf '%s' "$SIMET_MAC_LABEL" | tr a-z A-Z) || MAC="$SIMET_MAC_LABEL"
		LTEXT=$(printf '%s MAC:%s' "$LTEXT" "$MAC")
	}
else
	LTEXT=$(printf "%s?vl=%s" "$URL_AGENT_INTERACTIVE_PAIRING" "$SIMET2_VLABEL")
fi

[ "$DOTXT" -ne 0 ] && {
	printf '%s' "$LTEXT" | qrencode -t "$T_TM" -o "$TXTFILE" || {
		printf "%s: failed to render ANSI QRcode to %s\n" "$0" "$TXTFILE" >&2
		exit 1
	}
}
[ "$DOPNG" -ne 0 ] && {
	printf '%s' "$LTEXT" | qrencode -t PNG -o "$PNGFILE" || {
		printf "%s: failed to render QRcode to %s\n" "$0" "$PNGFILE" >&2
		exit 1
	}
}
:
