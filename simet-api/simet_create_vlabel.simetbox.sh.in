#!/bin/bash
## simet_create_vlabel.sh - creates and stores the SIMET2 virtual label
## OpenWRT/SIMETBOX version
## Copyright (c) 2019 NIC.br
##
## If a virtual label is not present in the persistent storage (or it
## is otherwise invalid), create one and return on stdout.
##
## Otherwise, return the existing virtual label on stdout.

# If we already have it, or it is disabled, output it and exit
@BINDIR@/simet_read_vlabel.sh 2>/dev/null && exit 0

umask 0022

set -e
set -o pipefail

. @SIMETLIBDIR@/simet_lib.sh || exit 3

OUTFILE=
RC=1
abend() {
  [ -n "$OUTFILE" ] && rm -f "$OUTFILE" 2>/dev/null
  simet_log simet-ma daemon.err "$0: error: $*"
  exit "$RC"
}

[ -z "$AGENT_VLABEL_FILE" ] && RC=3 abend "MA does not know where to keep its virtual label"
[ -z "$SIMET_MAC_LABEL" ] && RC=3 abend "MA failed to retrieve its main MAC address"

[ -r "${AGENT_VERSION_FILE}" ] && AGENT_VERSION=$(cat "${AGENT_VERSION_FILE}") || AGENT_VERSION=
[ -z "$AGENT_VERSION" ] && AGENT_VERSION="simet-ma/unknown"

SIMETBOX_VERSION=$(get_simet_box_version.sh 2>/dev/null) || SIMETBOX_VERSION="unknown"

openwrt_vendor_mtd_filter() {
  model=$(get_model.sh 2>/dev/null | tr A-Z a-z) || model=
  case "$model" in
    ubnt_*|ubiquiti_*)
      # EdgeRouter X v2.x bootloader changes factory partition
      # to handle primary/secondary kernel partition lifecycle.
      # assume other models will do the same.
      printf "%s" '/[" ]factory[" ]/ d'
    ;;
  esac
  :
}

#FIXME: use a real KDF
openwrt_read_invariant_seed() {
  # See if we can get something stable from the platform vendor
  [ -x "@SIMETLIBDIR@/vendor/get_platform_simet_secret" ] && \
    SBXSEED=$(@SIMETLIBDIR@/vendor/get_platform_simet_secret vlabel) || SBXSEED=
  if [ -n "$SBXSEED" ] && [ "$SBXSEED" != "DISABLED" ] && [ "$SBXSEED" != "disabled" ] ; then
    SBXSEED=$( set -o pipefail ; printf "NIC VLABEL IV 0132457869\n%s\nNIC VLABEL IV TRAILER 9123432100" "$SBXSEED" | sha256sum - ) \
      || RC=3 abend "failed to derive stable secret from platform simet secret"
    printf 'NIC3%s' "$SBXSEED" | tr -dc 0-9a-zA-Z
  else
    # This is a hack, it is not perfect, and not that secure.
    # Use unknown sources of variance (if we're lucky, the
    # serial number and the -- unused by openwrt/simetbox --
    # default vendor firmware wifi password) to have a
    # per-device secret seed.

    # note: this can be quite expensive in CPU and wall time

    P=$( sed -En -e '/^mtd[0-9]/! d' -e '/[" ](rootfs|firmware|kernel|ubi)/ d' -e "$(openwrt_vendor_mtd_filter)" -e 's#(mtd[^:]+).*#/dev/\1ro# ; p' < /proc/mtd ) \
      || RC=3 abend "failed to parse /proc/mtd"
    [ -z "$P" ] \
      && RC=3 abend "no useful partitions in /proc/mtd to generate a stable secret"
    SBXSEED=$( set -o pipefail ; { echo "NIC VLABEL IV 0132457869" ; cat -- $P ; } | md5sum - ) \
      || RC=3 abend "failed to generate stable secret from /dev/mtd"
    [ -z "$SBXSEED" ] \
      && RC=3 abend "md5sum empty?!"
    # FIXME: compress to base64, an md5sum becomes 8 characters. needs migration
    printf 'NIC1%s' "$SBXSEED" | tr -dc 0-9a-zA-Z
  fi
  :
}

openwrt_generate_vlabel() {
  RC=1
  [ -x "@SIMETLIBDIR@/vendor/get_platform_simet_label" ] && {
    # attempt to retreive a real, printed label from FLASH
    RC=0
    IVS=$(@SIMETLIBDIR@/vendor/get_platform_simet_label vlabel) || RC=$?
    # temporary error, *MUST* retry later and not generate own label
    [ $RC -ge 2 ] && return 20
  }
  [ $RC -ne 0 ] && {
    # not possible to retrieve a printed label from flash, generate a virtual one
    RC=0
    IVS=$(openwrt_read_invariant_seed) || RC=$?
  }
  [ $RC -eq 0 ] && printf '%s' "$IVS"
  return $RC
}

simetbox_output_vlabel_file() {
  #2nd line (or later) must be ^MAC[:blank:]<mac>[:blank:]...
  printf '%s\n' "$SIMET2_VLABEL"
  for i in $(simet_get_persistent_macs) ; do
    printf 'MAC %s "%s" "%s"\n' "$i" "$AGENT_VERSION" "$SIMETBOX_VERSION"
  done
}

SIMET2_VLABEL=$(openwrt_generate_vlabel) || SIMET2_VLABEL=
[ -z "$SIMET2_VLABEL" ] && RC=3 abend "MA could not create its virtual label"

[ -r "$AGENT_VLABEL_FILE" ] && {
  OLDLABEL=$(sed -n -e '1 {p;q}' "$AGENT_VLABEL_FILE") || OLDLABEL=
  [ -n "$OLDLABEL" ] && [ "$OLDLABEL" != "$SIMET2_VLABEL" ] && {
    mv -f "$AGENT_VLABEL_FILE" "${AGENT_VLABEL_FILE}.${SIMETBOX_VERSION}.bkp"
    # signal other layers we detected a problem
    [ -d "$SIMET_RUNSTATE_DIR" ] && touch "$SIMET_RUNSTATE_DIR/vlabel-was-foreign"
  }
}
simetbox_output_vlabel_file > "$AGENT_VLABEL_FILE" \
  || RC=1 abend "Could not write virtual label to persistent storage"

printf '%s\n' "$SIMET2_VLABEL"
:
